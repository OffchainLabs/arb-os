//
// Copyright 2021, Offchain Labs, Inc. All rights reserved.
//

public func safeAdd(x: uint, y: uint) -> uint {
    let ret = x + y;
    if (ret < x) {
        panic;
    }
    return ret;
}

public func safeSub(x: uint, y: uint) -> uint {
    if (x < y) {
        panic;
    }
    return x - y;
}

public func safeMul(x: uint, y: uint) -> uint {
    let ret = x * y;
    if ((x != 0) && (y != (ret/x))) {
        panic;
    }
    return ret;
}

public func safeToInt(x: uint) -> int {
    let ret = int(x);
    if (ret < int(0)) {
        panic;
    }
    return int(ret);
}

public func safeAddInt(x: int, y: int) -> int {
    let ret = x + y;
    if (x > int(0)) {
        if (ret < y) {
            panic;
        }
    } elseif (x < int(0)) {
        if (ret > y) {
            panic;
        }
    }
    return ret;
}

public func safeSubInt(x: int, y: int) -> int {
    let ret = x - y;
    if (y > int(0)) {
        if (ret > x) {
            panic;
        }
    } elseif (y < int(0)) {
        if (ret < x) {
            panic;
        }
    }
    return ret;
}

public func safeMulInt(x: int, y: int) -> int {
    let ret = x * y;
    if ((x != int(0)) && (y != (ret/x))) {
        panic;
    }
    return ret;
}

public func safeToUint(x: int) -> uint {
    if (x < int(0)) {
        panic;
    }
    return uint(x);
}