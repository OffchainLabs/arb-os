{"source_filename": "loop.wast",
 "commands": [
  {"type": "module", "line": 3, "filename": "loop.0.wasm"}, 
  {"type": "assert_return", "line": 282, "action": {"type": "invoke", "field": "empty", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 283, "action": {"type": "invoke", "field": "singular", "args": []}, "expected": [{"type": "i32", "value": "7"}]}, 
  {"type": "assert_return", "line": 284, "action": {"type": "invoke", "field": "multi", "args": []}, "expected": [{"type": "i32", "value": "8"}]}, 
  {"type": "assert_return", "line": 285, "action": {"type": "invoke", "field": "nested", "args": []}, "expected": [{"type": "i32", "value": "9"}]}, 
  {"type": "assert_return", "line": 286, "action": {"type": "invoke", "field": "deep", "args": []}, "expected": [{"type": "i32", "value": "150"}]}, 
  {"type": "assert_return", "line": 288, "action": {"type": "invoke", "field": "as-select-first", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 289, "action": {"type": "invoke", "field": "as-select-mid", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 290, "action": {"type": "invoke", "field": "as-select-last", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 292, "action": {"type": "invoke", "field": "as-if-condition", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 293, "action": {"type": "invoke", "field": "as-if-then", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 294, "action": {"type": "invoke", "field": "as-if-else", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 296, "action": {"type": "invoke", "field": "as-br_if-first", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 297, "action": {"type": "invoke", "field": "as-br_if-last", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 299, "action": {"type": "invoke", "field": "as-br_table-first", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 300, "action": {"type": "invoke", "field": "as-br_table-last", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 302, "action": {"type": "invoke", "field": "as-call_indirect-first", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 303, "action": {"type": "invoke", "field": "as-call_indirect-mid", "args": []}, "expected": [{"type": "i32", "value": "2"}]}, 
  {"type": "assert_return", "line": 304, "action": {"type": "invoke", "field": "as-call_indirect-last", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 306, "action": {"type": "invoke", "field": "as-store-first", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 307, "action": {"type": "invoke", "field": "as-store-last", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 309, "action": {"type": "invoke", "field": "as-memory.grow-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 310, "action": {"type": "invoke", "field": "as-call-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 311, "action": {"type": "invoke", "field": "as-return-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 312, "action": {"type": "invoke", "field": "as-drop-operand", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 313, "action": {"type": "invoke", "field": "as-br-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 314, "action": {"type": "invoke", "field": "as-local.set-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 315, "action": {"type": "invoke", "field": "as-local.tee-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 316, "action": {"type": "invoke", "field": "as-global.set-value", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 317, "action": {"type": "invoke", "field": "as-load-operand", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 319, "action": {"type": "invoke", "field": "as-unary-operand", "args": []}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_return", "line": 320, "action": {"type": "invoke", "field": "as-binary-operand", "args": []}, "expected": [{"type": "i32", "value": "12"}]}, 
  {"type": "assert_return", "line": 321, "action": {"type": "invoke", "field": "as-test-operand", "args": []}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_return", "line": 322, "action": {"type": "invoke", "field": "as-compare-operand", "args": []}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_return", "line": 324, "action": {"type": "invoke", "field": "break-bare", "args": []}, "expected": [{"type": "i32", "value": "19"}]}, 
  {"type": "assert_return", "line": 325, "action": {"type": "invoke", "field": "break-value", "args": []}, "expected": [{"type": "i32", "value": "18"}]}, 
  {"type": "assert_return", "line": 326, "action": {"type": "invoke", "field": "break-repeated", "args": []}, "expected": [{"type": "i32", "value": "18"}]}, 
  {"type": "assert_return", "line": 327, "action": {"type": "invoke", "field": "break-inner", "args": []}, "expected": [{"type": "i32", "value": "31"}]}, 
  {"type": "assert_return", "line": 329, "action": {"type": "invoke", "field": "effects", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_return", "line": 331, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "0"}]}, "expected": [{"type": "i64", "value": "1"}]}, 
  {"type": "assert_return", "line": 332, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "1"}]}, "expected": [{"type": "i64", "value": "1"}]}, 
  {"type": "assert_return", "line": 333, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "2"}]}, "expected": [{"type": "i64", "value": "2"}]}, 
  {"type": "assert_return", "line": 334, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "3"}]}, "expected": [{"type": "i64", "value": "6"}]}, 
  {"type": "assert_return", "line": 335, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "5"}]}, "expected": [{"type": "i64", "value": "120"}]}, 
  {"type": "assert_return", "line": 336, "action": {"type": "invoke", "field": "while", "args": [{"type": "i64", "value": "20"}]}, "expected": [{"type": "i64", "value": "2432902008176640000"}]}, 
  {"type": "assert_return", "line": 338, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "0"}]}, "expected": [{"type": "i64", "value": "1"}]}, 
  {"type": "assert_return", "line": 339, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "1"}]}, "expected": [{"type": "i64", "value": "1"}]}, 
  {"type": "assert_return", "line": 340, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "2"}]}, "expected": [{"type": "i64", "value": "2"}]}, 
  {"type": "assert_return", "line": 341, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "3"}]}, "expected": [{"type": "i64", "value": "6"}]}, 
  {"type": "assert_return", "line": 342, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "5"}]}, "expected": [{"type": "i64", "value": "120"}]}, 
  {"type": "assert_return", "line": 343, "action": {"type": "invoke", "field": "for", "args": [{"type": "i64", "value": "20"}]}, "expected": [{"type": "i64", "value": "2432902008176640000"}]}, 
  {"type": "assert_invalid", "line": 347, "filename": "loop.1.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 351, "filename": "loop.2.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 355, "filename": "loop.3.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 359, "filename": "loop.4.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 364, "filename": "loop.5.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 370, "filename": "loop.6.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 376, "filename": "loop.7.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 382, "filename": "loop.8.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 388, "filename": "loop.9.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 395, "filename": "loop.10.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 404, "filename": "loop.11.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 413, "filename": "loop.12.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 424, "filename": "loop.13.wat", "text": "mismatching label", "module_type": "text"}, 
  {"type": "assert_malformed", "line": 428, "filename": "loop.14.wat", "text": "mismatching label", "module_type": "text"}]}
